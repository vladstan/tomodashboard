schema {
  query: Query
  subscription: Subscription
}

input AddIncomingReqSubscriptionInput {
  clientSubscriptionId: String
}

type AddIncomingReqSubscriptionPayload {
  incomingReq: IncomingReq
  incomingReqEdge: IncomingReqEdge
  clientSubscriptionId: String
}

type IncomingReq implements Node {
  id: ID!
  _id: String
  type: String
  userId: String
  messageText: String
}

type IncomingReqEdge {
  node: IncomingReq
  cursor: String!
}

interface Node {
  id: ID!
}

type Profile implements Node {
  id: ID!
  _id: String
  userId: String
}

type Query {
  node(id: ID!): Node
  user(id: String): User
}

type Subscription {
  addIncomingReqSubscription(input: AddIncomingReqSubscriptionInput!): AddIncomingReqSubscriptionPayload
}

type User implements Node {
  id: ID!
  _id: String
  facebookId: String
  profile: Profile
}
